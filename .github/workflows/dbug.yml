name: Build, Push Docker and Deploy to Kubernetes

on:
  release:
    types: [published] # This workflow runs when a new release is published.

jobs:
  build-and-push-gateway:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Fetches your repository's code.

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }} # Uses a secret for Docker Hub username.
          password: ${{ secrets.DOCKER_PASSWORD }} # Uses a secret for Docker Hub password/PAT.
          # Removed: ecr: auto and logout: true (as discussed, these were incorrect or unnecessary here)

      - name: Build and push gateway image
        uses: docker/build-push-action@v5
        with:
          context: ./gateway # Builds Docker image from the 'gateway' directory.
          push: true
          tags: doseza007/nest-gateway:latest # Pushes to Docker Hub with this tag.

  build-and-push-user:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push user image
        uses: docker/build-push-action@v5
        with:
          context: ./user # Builds Docker image from the 'user' directory.
          push: true
          tags: doseza007/nest-user:latest # Pushes to Docker Hub with this tag.

  deploy-to-kubernetes:
    runs-on: ubuntu-latest
    needs: [build-and-push-gateway, build-and-push-user] # This job runs only after both build/push jobs succeed.
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Fetches your repository's code (again).

      - name: Deploy to Kubernetes
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }} # Uses a secret for the server host.
          username: 'root' # Connects as root (be careful with this in production).
          password: ${{ secrets.SSH_PASSWORD }} # Uses a secret for SSH password.
          script: |
            cd /root/ne
            kubectl apply -f c.yaml # Applies a Kubernetes manifest file.