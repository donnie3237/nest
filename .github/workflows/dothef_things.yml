name: Build, Push Docker and Deploy to Kubernetes

on:
  release:
    types: [published]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - name: gateway
            path: apps/gateway
            image: doseza007/nest-gateway
            port: 8000
          - name: user
            path: apps/user
            image: doseza007/nest-user
          - name: product
            path: apps/product
            image: doseza007/nest-product

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # cache: 'pnpm' # <--- ลบบรรทัดนี้ออก!

      - name: Enable Corepack & Setup pnpm
        # ใช้ shell: bash เพื่อให้มั่นใจว่า PATH ถูกจัดการถูกต้อง
        # และเพื่อให้ pnpm พร้อมใช้งานใน Steps ถัดไป
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate
          echo "$(pnpm store path)/.pnpm-store" >> $GITHUB_PATH # Add pnpm store to PATH for caching (optional but good for debugging)
          echo "$(pnpm root -g)" >> $GITHUB_PATH # Add global pnpm bin to PATH

      - name: Install Monorepo Dependencies
        run: pnpm install --frozen-lockfile
        # Note: If pnpm cache is still desired, you might need a separate step for it
        # using actions/cache directly, or just rely on pnpm's internal cache if it's fast enough.
        # However, setup-node's cache with 'pnpm' is designed for this.

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get current date and short SHA for image tag
        id: build_info
        run: |
          echo "DATE=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT
          echo "SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build and push ${{ matrix.service.name }} Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.service.path }}/Dockerfile
          push: true
          tags: |
            ${{ matrix.service.image }}:latest
            ${{ matrix.service.image }}:${{ github.ref_name }}
            ${{ matrix.service.image }}:${{ steps.build_info.outputs.DATE }}-${{ steps.build_info.outputs.SHA }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-to-kubernetes:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy Gateway to Kubernetes (using :latest tag)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: 'root'
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd /root/ne
            kubectl apply -f k8s/deployment.yml