name: Build, Push Docker & Deploy to K8s

on:
  release:
    types: [published]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - name: gateway
            path: apps/gateway
            image: doseza007/nest-gateway
          - name: user-service
            path: apps/user
            image: doseza007/nest-user
          - name: product-service
            path: apps/product
            image: doseza007/nest-product

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm & turbo
        uses: pnpm/action-setup@v3
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Enable Corepack & pnpm
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Prune monorepo for ${{ matrix.service.name }}
        run: pnpm turbo prune ${{ matrix.service.name }} --docker

      - name: Get build info
        id: info
        run: |
          echo "DATE=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT
          echo "SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          install: true
      - name: Build & Push ${{ matrix.service.name }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.service.path }}/Dockerfile
          push: true
          tags: |
            ${{ matrix.service.image }}:latest
            ${{ matrix.service.image }}:${{ github.ref_name }}
            ${{ matrix.service.image }}:${{ steps.info.outputs.DATE }}-${{ steps.info.outputs.SHA }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-to-kubernetes:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
        shell: bash

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /root/ne
            kubectl set image deployment/gateway doseza007/nest-gateway:latest -n your-namespace
            kubectl set image deployment/user doseza007/nest-user:latest -n your-namespace
            kubectl set image deployment/product doseza007/nest-product:latest -n your-namespace
            kubectl rollout status deployment/gateway -n your-namespace
            kubectl rollout status deployment/user -n your-namespace
            kubectl rollout status deployment/product -n your-namespace
