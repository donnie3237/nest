name: Build, Push Docker & Deploy to K8s

on:
  release:
    types: [published]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - name: gateway
            path: apps/gateway
            image: doseza007/nest-gateway
            deployment: gateway # ชื่อ deployment ใน Kubernetes
          - name: user-service
            path: apps/user
            image: doseza007/nest-user
            deployment: user # ชื่อ deployment ใน Kubernetes
          - name: product-service
            path: apps/product
            image: doseza007/nest-product
            deployment: product # ชื่อ deployment ใน Kubernetes
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Prune monorepo for ${{ matrix.service.name }}
        run: pnpm turbo prune ${{ matrix.service.name }} --docker

      - name: Get build info
        id: info
        run: |
          echo "DATE=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT
          echo "SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      # --- ส่วนที่เพิ่มเข้ามาเพื่อแก้ปัญหา Cache ---
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      # -------------------------------------------

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push ${{ matrix.service.name }}
        id: build
        uses: docker/build-push-action@v5
        with:
          # --- แก้ไข Context ให้ชี้ไปที่ directory ที่ prune แล้ว ---
          context: ./out
          # ----------------------------------------------------
          file: ./out/apps/${{ matrix.service.name }}/Dockerfile
          push: true
          tags: |
            ${{ matrix.service.image }}:latest
            ${{ matrix.service.image }}:${{ github.ref_name }}
            ${{ matrix.service.image }}:${{ steps.info.outputs.DATE }}-${{ steps.info.outputs.SHA }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-to-kubernetes:
    # --- ทำให้ deploy ทำงานหลังจาก build-and-push สำเร็จ ---
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH key
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            echo "--- Deploying all services with new release tag: ${{ github.ref_name }} ---"
            
            # --- ทำให้การ deploy เป็นแบบ Dynamic ---
            kubectl set image deployment/gateway gateway=${{ secrets.DOCKER_USERNAME }}/nest-gateway:${{ github.ref_name }} --namespace your-namespace
            kubectl set image deployment/user user=${{ secrets.DOCKER_USERNAME }}/nest-user:${{ github.ref_name }} --namespace your-namespace
            kubectl set image deployment/product product=${{ secrets.DOCKER_USERNAME }}/nest-product:${{ github.ref_name }} --namespace your-namespace

            echo "--- Waiting for rollout to complete ---"
            kubectl rollout status deployment/gateway --namespace your-namespace
            kubectl rollout status deployment/user --namespace your-namespace
            kubectl rollout status deployment/product --namespace your-namespace

            echo "--- Deployment finished successfully! ---"