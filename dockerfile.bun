# Dockerfile.bun

# 1. Base Stage
FROM oven/bun:1-alpine AS base
WORKDIR /usr/src/app

# 2. Dependencies Stage: ติดตั้ง Dependencies ทั้งหมดสำหรับ Build
FROM base AS dependencies
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY packages/ packages/
COPY apps/ apps/
RUN bun install

# 3. Builder Stage: Build โปรเจกต์
FROM dependencies AS builder
ARG PROJECT_NAME

# ---- THE FIX IS HERE ----
# บังคับให้ใช้ PATH ที่ถูกต้องนำหน้าคำสั่ง RUN โดยตรง
RUN PATH="/usr/src/app/node_modules/.bin:$PATH" bun run --filter=${PROJECT_NAME} build

# 4. Final Runner Stage: สร้าง Image สุดท้ายที่เล็กและปลอดภัย
FROM base AS final
ARG PROJECT_PATH
WORKDIR /usr/src/app

# สลับไปใช้ user 'bun' ที่มีมาให้แล้ว
USER bun

# คัดลอกไฟล์ที่จำเป็นเพื่อติดตั้งเฉพาะ Production Dependencies
COPY --from=dependencies --chown=bun:bun package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY --from=dependencies --chown=bun:bun packages/ packages/
COPY --from=dependencies --chown=bun:bun apps/ apps/

# ติดตั้งเฉพาะ Production Dependencies เท่านั้น
RUN bun install --production

# คัดลอกเฉพาะ Build output จาก builder stage
COPY --from=builder --chown=bun:bun /usr/src/app/apps/${PROJECT_PATH}/dist ./dist

ENV NODE_ENV=production

# รันโปรแกรม
CMD ["bun", "run", "dist/main.js"]