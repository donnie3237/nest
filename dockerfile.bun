# Dockerfile.bun

# 1. Base Stage
FROM oven/bun:1-alpine AS base
WORKDIR /usr/src/app

# 2. Dependencies Stage: ติดตั้ง Dependencies ทั้งหมดสำหรับ Build
FROM base AS dependencies
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY packages/ packages/
COPY apps/ apps/
RUN bun install

# 3. Builder Stage: Build โปรเจกต์
FROM dependencies AS builder
ARG PROJECT_NAME

# เพิ่ม PATH ของ node_modules/.bin ด้วย Syntax ที่ถูกต้อง (key=value)
ENV PATH="/usr/src/app/node_modules/.bin:$PATH"

RUN bun run --filter=${PROJECT_NAME} build

# 4. Final Runner Stage: สร้าง Image สุดท้าย
FROM base AS final
ARG PROJECT_NAME
ARG PROJECT_PATH
WORKDIR /usr/src/app

# สลับไปใช้ user 'bun'
USER bun

# คัดลอก Build output และ Production dependencies ที่จำเป็น
COPY --from=builder --chown=bun:bun /usr/src/app/node_modules ./node_modules
COPY --from=builder --chown=bun:bun /usr/src/app/apps/${PROJECT_PATH}/dist ./dist

ENV NODE_ENV=production

CMD ["bun", "run", "dist/main.js"]